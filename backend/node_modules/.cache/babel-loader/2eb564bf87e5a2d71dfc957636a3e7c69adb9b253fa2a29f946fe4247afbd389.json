{"ast":null,"code":"var _jsxFileName = \"/home/melissack/Development/Challenge/Plantshop/src/components/PlantCard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction PlantCard(_ref) {\n  _s();\n  let {\n    plants,\n    onDelete\n  } = _ref;\n  const [soldOutPlants, setSoldOutPlants] = useState({});\n  const handleSoldOut = plantId => {\n    setSoldOutPlants({\n      ...soldOutPlants,\n      [plantId]: true\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: plants.map(plant => /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"card\",\n      \"data-testid\": \"plant-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: plant.image,\n        alt: plant.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: plant.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Price: \", plant.price]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this), !soldOutPlants[plant.id] ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"primary\",\n        onClick: () => handleSoldOut(plant.id),\n        children: \"In Stock\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: true,\n        className: \"sold-out\",\n        children: \"Sold Out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"delete-button\",\n        onClick: () => onDelete(plant.id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this)]\n    }, plant.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n}\n_s(PlantCard, \"g9RWZ37OC684N8AO9ewzJdTj7tM=\");\n_c = PlantCard;\nexport default PlantCard;\nvar _c;\n$RefreshReg$(_c, \"PlantCard\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","PlantCard","_ref","_s","plants","onDelete","soldOutPlants","setSoldOutPlants","handleSoldOut","plantId","children","map","plant","className","src","image","alt","name","fileName","_jsxFileName","lineNumber","columnNumber","price","id","onClick","disabled","_c","$RefreshReg$"],"sources":["/home/melissack/Development/Challenge/Plantshop/src/components/PlantCard.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction PlantCard({ plants, onDelete }) {\n  const [soldOutPlants, setSoldOutPlants] = useState({});\n  const handleSoldOut = (plantId) => {\n    setSoldOutPlants({\n      ...soldOutPlants,\n      [plantId]: true\n    });\n  };\n\n  return (\n    <>\n      {plants.map((plant) => (\n        <li key={plant.id} className=\"card\" data-testid=\"plant-item\">\n          <img src={plant.image} alt={plant.name} />\n          <h4>{plant.name}</h4>\n          <p>Price: {plant.price}</p>\n          {(!soldOutPlants[plant.id] ? (\n            <button className=\"primary\" onClick={() => handleSoldOut(plant.id)}>In Stock</button>\n          ) : (\n            <button disabled className=\"sold-out\">Sold Out\n            </button>\n          ))}\n          <button className=\"delete-button\" onClick={() => onDelete(plant.id)}>\n            Delete\n          </button>\n        </li>\n      ))}\n    </>\n  );\n}\n\nexport default PlantCard;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExC,SAASC,SAASA,CAAAC,IAAA,EAAuB;EAAAC,EAAA;EAAA,IAAtB;IAAEC,MAAM;IAAEC;EAAS,CAAC,GAAAH,IAAA;EACrC,MAAM,CAACI,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC,CAAC;EACtD,MAAMY,aAAa,GAAIC,OAAO,IAAK;IACjCF,gBAAgB,CAAC;MACf,GAAGD,aAAa;MAChB,CAACG,OAAO,GAAG;IACb,CAAC,CAAC;EACJ,CAAC;EAED,oBACEX,OAAA,CAAAE,SAAA;IAAAU,QAAA,EACGN,MAAM,CAACO,GAAG,CAAEC,KAAK,iBAChBd,OAAA;MAAmBe,SAAS,EAAC,MAAM;MAAC,eAAY,YAAY;MAAAH,QAAA,gBAC1DZ,OAAA;QAAKgB,GAAG,EAAEF,KAAK,CAACG,KAAM;QAACC,GAAG,EAAEJ,KAAK,CAACK;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eAC1CvB,OAAA;QAAAY,QAAA,EAAKE,KAAK,CAACK;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,eACrBvB,OAAA;QAAAY,QAAA,GAAG,SAAO,EAACE,KAAK,CAACU,KAAK;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,EACzB,CAACf,aAAa,CAACM,KAAK,CAACW,EAAE,CAAC,gBACxBzB,OAAA;QAAQe,SAAS,EAAC,SAAS;QAACW,OAAO,EAAEA,CAAA,KAAMhB,aAAa,CAACI,KAAK,CAACW,EAAE,CAAE;QAAAb,QAAA,EAAC;MAAQ;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,gBAErFvB,OAAA;QAAQ2B,QAAQ;QAACZ,SAAS,EAAC,UAAU;QAAAH,QAAA,EAAC;MACtC;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACD,eACDvB,OAAA;QAAQe,SAAS,EAAC,eAAe;QAACW,OAAO,EAAEA,CAAA,KAAMnB,QAAQ,CAACO,KAAK,CAACW,EAAE,CAAE;QAAAb,QAAA,EAAC;MAErE;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA,GAZFT,KAAK,CAACW,EAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAclB;EAAC,iBACD;AAEP;AAAClB,EAAA,CA7BQF,SAAS;AAAAyB,EAAA,GAATzB,SAAS;AA+BlB,eAAeA,SAAS;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}