{"ast":null,"code":"import _toConsumableArray from\"/home/melissack/Development/Challenge/Plantshop/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/home/melissack/Development/Challenge/Plantshop/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from\"react\";import NewPlantForm from\"./NewPlantForm\";import PlantList from\"./PlantList\";import Search from\"./Search\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function PlantPage(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),plants=_useState2[0],setPlants=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),searchQuery=_useState4[0],setSearchQuery=_useState4[1];//Fetching data from the database\nuseEffect(function(){fetch(\"http://localhost:6001/plants\").then(function(response){return response.json();}).then(function(plants){return setPlants(plants);}).catch(function(error){return console.error('Error fetching data:',error);});},[]);//Adding a new plant on the form\nvar addPlant=function addPlant(newPlant){fetch(\"http://localhost:6001/plants\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(newPlant)}).then(function(response){return response.json();}).then(function(addedPlant){setPlants(function(prevPlants){return[].concat(_toConsumableArray(prevPlants),[addedPlant]);});}).catch(function(error){return console.error('Error adding plant:',error);});};// Handle search input change\nvar handleSearch=function handleSearch(query){setSearchQuery(query);};// Filter plants based on search query\nvar filteredPlants=plants.filter(function(plant){return plant.name.toLowerCase().includes(searchQuery.toLowerCase());});// Delete plant \nvar deletePlant=function deletePlant(id){fetch(\"http://localhost:6001/plants/\".concat(id),{method:\"DELETE\"}).then(function(){// Update local state to remove deleted plant\nsetPlants(function(prevPlants){return prevPlants.filter(function(plant){return plant.id!==id;});});}).catch(function(error){return console.error('Error deleting plant:',error);});};return/*#__PURE__*/_jsxs(\"main\",{children:[/*#__PURE__*/_jsx(NewPlantForm,{onAddPlant:addPlant}),/*#__PURE__*/_jsx(Search,{onSearch:handleSearch,searchTerm:searchQuery}),/*#__PURE__*/_jsx(PlantList,{plants:filteredPlants,onDelete:deletePlant})]});}export default PlantPage;","map":{"version":3,"names":["React","useEffect","useState","NewPlantForm","PlantList","Search","jsx","_jsx","jsxs","_jsxs","PlantPage","_useState","_useState2","_slicedToArray","plants","setPlants","_useState3","_useState4","searchQuery","setSearchQuery","fetch","then","response","json","catch","error","console","addPlant","newPlant","method","headers","body","JSON","stringify","addedPlant","prevPlants","concat","_toConsumableArray","handleSearch","query","filteredPlants","filter","plant","name","toLowerCase","includes","deletePlant","id","children","onAddPlant","onSearch","searchTerm","onDelete"],"sources":["/home/melissack/Development/Challenge/Plantshop/src/components/PlantPage.js"],"sourcesContent":["import React,{useEffect,useState} from \"react\";\nimport NewPlantForm from \"./NewPlantForm\";\nimport PlantList from \"./PlantList\";\nimport Search from \"./Search\";\n\nfunction PlantPage() {\n  const [plants, setPlants] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n\n//Fetching data from the database\n  useEffect (() => {\n    fetch(\"http://localhost:6001/plants\")\n    .then(response => response.json())\n    .then(plants => setPlants(plants))\n    .catch(error => console.error('Error fetching data:' ,error))\n  },[])\n\n//Adding a new plant on the form\n  const addPlant = (newPlant) => {\n    fetch(\"http://localhost:6001/plants\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(newPlant),\n    })\n    .then(response => response.json())\n    .then(addedPlant => {setPlants((prevPlants) => [...prevPlants, addedPlant])})\n    .catch(error => console.error('Error adding plant:', error));\n  };\n\n   // Handle search input change\n   const handleSearch = (query) => {\n    setSearchQuery(query);\n  };\n\n  // Filter plants based on search query\n  const filteredPlants = plants.filter((plant) =>\n    plant.name.toLowerCase().includes(searchQuery.toLowerCase())\n  );\n\n  // Delete plant \n  const deletePlant = (id) => {\n    fetch(`http://localhost:6001/plants/${id}`, {\n      method: \"DELETE\",\n    })\n    .then(() => {\n      // Update local state to remove deleted plant\n      setPlants((prevPlants) => prevPlants.filter(plant => plant.id !== id));\n    })\n    .catch(error => console.error('Error deleting plant:', error));\n  };\n\n  return (\n    <main>\n      <NewPlantForm onAddPlant={addPlant} />\n      <Search onSearch={handleSearch} searchTerm={searchQuery}/>\n      <PlantList plants={filteredPlants} onDelete={deletePlant} />\n    </main>\n  );\n}\n\nexport default PlantPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}