{"ast":null,"code":"var _jsxFileName = \"/home/melissack/Development/Challenge/Plantshop/src/components/PlantList.js\",\n  _s = $RefreshSig$();\n// import React from \"react\";\nimport React, { useEffect, useState } from \"react\";\nimport PlantCard from \"./PlantCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PlantList() {\n  _s();\n  const [plants, setplants] = useState(null);\n  useEffect(() => {\n    fetch(\"http://localhost:6001/plants\").then(response => response.json()).then(plants => setplants(plants)).catch(error => console.error('Error fetching data:', error));\n  }, []);\n  if (!plants) {\n    return;\n    /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"loading ..\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"cards\",\n    children: [\" \", /*#__PURE__*/_jsxDEV(PlantCard, {\n      plant: plants\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 28\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(PlantList, \"6Mec/LjE+aXpJ61g9YSLUUnNu7Y=\");\n_c = PlantList;\nexport default PlantList;\nvar _c;\n$RefreshReg$(_c, \"PlantList\");","map":{"version":3,"names":["React","useEffect","useState","PlantCard","jsxDEV","_jsxDEV","PlantList","_s","plants","setplants","fetch","then","response","json","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","plant","_c","$RefreshReg$"],"sources":["/home/melissack/Development/Challenge/Plantshop/src/components/PlantList.js"],"sourcesContent":["// import React from \"react\";\nimport React,{useEffect,useState} from \"react\";\nimport PlantCard from \"./PlantCard\";\n\nfunction PlantList() {\n  const [plants,setplants] = useState(null)\n  useEffect (() => {\n    fetch(\"http://localhost:6001/plants\")\n    .then(response => response.json())\n    .then(plants => setplants(plants))\n    .catch(error => console.error('Error fetching data:' ,error))\n  },[])\n  if (!plants){\n    return\n    <div>loading ..</div>\n  }\n  return (\n    <ul className=\"cards\"> <PlantCard plant = {plants}/> </ul>\n  );\n}\n\nexport default PlantList;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAEC,SAAS,EAACC,QAAQ,QAAO,OAAO;AAC9C,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,MAAM,EAACC,SAAS,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACzCD,SAAS,CAAE,MAAM;IACfS,KAAK,CAAC,8BAA8B,CAAC,CACpCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACH,MAAM,IAAIC,SAAS,CAACD,MAAM,CAAC,CAAC,CACjCM,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC,CAAC;EAC/D,CAAC,EAAC,EAAE,CAAC;EACL,IAAI,CAACP,MAAM,EAAC;IACV;IACA,aAAAH,OAAA;MAAAY,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM;EACvB;EACA,oBACEhB,OAAA;IAAIiB,SAAS,EAAC,OAAO;IAAAL,QAAA,GAAC,GAAC,eAAAZ,OAAA,CAACF,SAAS;MAACoB,KAAK,EAAIf;IAAO;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,KAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAK;AAE9D;AAACd,EAAA,CAfQD,SAAS;AAAAkB,EAAA,GAATlB,SAAS;AAiBlB,eAAeA,SAAS;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}