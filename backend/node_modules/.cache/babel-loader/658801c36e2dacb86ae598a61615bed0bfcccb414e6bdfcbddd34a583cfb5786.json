{"ast":null,"code":"var _jsxFileName = \"/home/melissack/Development/Challenge/Plantshop/src/components/PlantPage.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport NewPlantForm from \"./NewPlantForm\";\nimport PlantList from \"./PlantList\";\nimport Search from \"./Search\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PlantPage() {\n  _s();\n  const [plants, setPlants] = useState([]);\n  const addPlant = newPlant => {\n    fetch(\"http://localhost:6001/plants\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newPlant)\n    }).then(response => response.json()).then(addedPlant => {\n      setPlants(prevPlants => [...prevPlants, addedPlant]); // Update state with new plant\n    }).catch(error => console.error('Error adding plant:', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(NewPlantForm, {\n      onAddPlant: addPlant\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PlantList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(PlantPage, \"qFrC7t7MBDpOpbah5GO+y0j19xs=\");\n_c = PlantPage;\nexport default PlantPage;\nvar _c;\n$RefreshReg$(_c, \"PlantPage\");","map":{"version":3,"names":["React","NewPlantForm","PlantList","Search","jsxDEV","_jsxDEV","PlantPage","_s","plants","setPlants","useState","addPlant","newPlant","fetch","method","headers","body","JSON","stringify","then","response","json","addedPlant","prevPlants","catch","error","console","children","onAddPlant","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/melissack/Development/Challenge/Plantshop/src/components/PlantPage.js"],"sourcesContent":["import React from \"react\";\nimport NewPlantForm from \"./NewPlantForm\";\nimport PlantList from \"./PlantList\";\nimport Search from \"./Search\";\n\nfunction PlantPage() {\n  const [plants, setPlants] = useState([]);\n  const addPlant = (newPlant) => {\n    fetch(\"http://localhost:6001/plants\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(newPlant),\n    })\n      .then((response) => response.json())\n      .then((addedPlant) => {\n        setPlants((prevPlants) => [...prevPlants, addedPlant]); // Update state with new plant\n      })\n      .catch((error) => console.error('Error adding plant:', error));\n  };\n  return (\n    <main>\n      <NewPlantForm onAddPlant={addPlant} />\n      <Search />\n      <PlantList />\n    </main>\n  );\n}\n\nexport default PlantPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAMC,QAAQ,GAAIC,QAAQ,IAAK;IAC7BC,KAAK,CAAC,8BAA8B,EAAE;MACpCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,QAAQ;IAC/B,CAAC,CAAC,CACCO,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAEG,UAAU,IAAK;MACpBb,SAAS,CAAEc,UAAU,IAAK,CAAC,GAAGA,UAAU,EAAED,UAAU,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,CACDE,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC,CAAC;EAClE,CAAC;EACD,oBACEpB,OAAA;IAAAsB,QAAA,gBACEtB,OAAA,CAACJ,YAAY;MAAC2B,UAAU,EAAEjB;IAAS;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACtC3B,OAAA,CAACF,MAAM;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACV3B,OAAA,CAACH,SAAS;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACR;AAEX;AAACzB,EAAA,CAvBQD,SAAS;AAAA2B,EAAA,GAAT3B,SAAS;AAyBlB,eAAeA,SAAS;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}