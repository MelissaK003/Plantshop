{"ast":null,"code":"var _jsxFileName = \"/home/melissack/Development/Challenge/Plantshop/src/components/PlantPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport NewPlantForm from \"./NewPlantForm\";\nimport PlantList from \"./PlantList\";\nimport Search from \"./Search\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PlantPage() {\n  _s();\n  const [plants, setPlants] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n\n  //Fetching data from the database\n  useEffect(() => {\n    fetch(\"http://localhost:6001/plants\").then(response => response.json()).then(plants => setPlants(plants)).catch(error => console.error('Error fetching data:', error));\n  }, []);\n\n  //Adding a new plant on the form\n  const addPlant = newPlant => {\n    fetch(\"http://localhost:6001/plants\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newPlant)\n    }).then(response => response.json()).then(addedPlant => {\n      setPlants(prevPlants => [...prevPlants, addedPlant]);\n    }).catch(error => console.error('Error adding plant:', error));\n  };\n\n  // Handle search input change\n  const handleSearch = query => {\n    setSearchQuery(query);\n  };\n\n  // Filter plants based on search query\n  const filteredPlants = plants.filter(plant => plant.name.toLowerCase().includes(searchQuery.toLowerCase()));\n\n  // Delete plant function\n  const deletePlant = id => {\n    fetch(`http://localhost:6001/plants/${id}`, {\n      method: \"DELETE\"\n    }).then(() => {\n      // Update local state to remove deleted plant\n      setPlants(prevPlants => prevPlants.filter(plant => plant.id !== id));\n    }).catch(error => console.error('Error deleting plant:', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(NewPlantForm, {\n      onAddPlant: addPlant\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Search, {\n      onSearch: handleSearch,\n      searchTerm: searchQuery\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PlantList, {\n      plants: filteredPlants\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(PlantPage, \"Fi0olgT8Ksi90o5Ft3+HyHvwyiY=\");\n_c = PlantPage;\nexport default PlantPage;\nvar _c;\n$RefreshReg$(_c, \"PlantPage\");","map":{"version":3,"names":["React","useEffect","useState","NewPlantForm","PlantList","Search","jsxDEV","_jsxDEV","PlantPage","_s","plants","setPlants","searchQuery","setSearchQuery","fetch","then","response","json","catch","error","console","addPlant","newPlant","method","headers","body","JSON","stringify","addedPlant","prevPlants","handleSearch","query","filteredPlants","filter","plant","name","toLowerCase","includes","deletePlant","id","children","onAddPlant","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","searchTerm","_c","$RefreshReg$"],"sources":["/home/melissack/Development/Challenge/Plantshop/src/components/PlantPage.js"],"sourcesContent":["import React,{useEffect,useState} from \"react\";\nimport NewPlantForm from \"./NewPlantForm\";\nimport PlantList from \"./PlantList\";\nimport Search from \"./Search\";\n\nfunction PlantPage() {\n  const [plants, setPlants] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n\n//Fetching data from the database\n  useEffect (() => {\n    fetch(\"http://localhost:6001/plants\")\n    .then(response => response.json())\n    .then(plants => setPlants(plants))\n    .catch(error => console.error('Error fetching data:' ,error))\n  },[])\n\n//Adding a new plant on the form\n  const addPlant = (newPlant) => {\n    fetch(\"http://localhost:6001/plants\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(newPlant),\n    })\n    .then(response => response.json())\n    .then(addedPlant => {setPlants((prevPlants) => [...prevPlants, addedPlant])})\n    .catch(error => console.error('Error adding plant:', error));\n  };\n\n   // Handle search input change\n   const handleSearch = (query) => {\n    setSearchQuery(query);\n  };\n\n  // Filter plants based on search query\n  const filteredPlants = plants.filter((plant) =>\n    plant.name.toLowerCase().includes(searchQuery.toLowerCase())\n  );\n  \n  // Delete plant function\n  const deletePlant = (id) => {\n    fetch(`http://localhost:6001/plants/${id}`, {\n      method: \"DELETE\",\n    })\n    .then(() => {\n      // Update local state to remove deleted plant\n      setPlants((prevPlants) => prevPlants.filter(plant => plant.id !== id));\n    })\n    .catch(error => console.error('Error deleting plant:', error));\n  };\n\n  return (\n    <main>\n      <NewPlantForm onAddPlant={addPlant} />\n      <Search onSearch={handleSearch} searchTerm={searchQuery}/>\n      <PlantList plants={filteredPlants} />\n    </main>\n  );\n}\n\nexport default PlantPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}